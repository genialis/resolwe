[tox]
envlist =
    py310{,-storage-credentials},
    py311{,-storage-credentials},
    docs,
    linters,
    packaging,
    migrations
skip_missing_interpreters = false
minversion = 3.10.0
isolated_build = true

# Configure special Tox environment used for isolated building of the source
# package.
[testenv:.package]
# Use the default Python 3 version available on the system.
# NOTE: This makes it portable to CI systems where only one particular Python 3
# version is installed.
basepython = python3

# Use setuptools suitable for google storage connectors.


[testenv]
allowlist_externals = bash
basepython =
    py310{,-storage-credentials}: python3.10
    py311{,-storage-credentials}: python3.11
    docs,linters,packaging,migrations: python3.11
extras =
    # Always include storage extras or connectors related tests will fail.
    py3{10,11}{,-storage-credentials}: storage_s3,storage_gcs, test
    docs: docs, storage_s3, storage_gcs
    linters: test
    packaging: test
    migrations: test
passenv =
    # Pass environment variables controlling project's tests.
    py3{10,11}{,-storage-credentials},migrations: RESOLWE_*,DOCKER_*,DJANGO_TEST_PROCESSES,LC_*,GITHUB_*
whitelist_externals =
    migrations: bash
    migrations: psql
ignore_errors =
    !linters: false
    # Run all linters to see their output even if one of them fails.
    linters: true

commands_pre =
    # Verify installed packages have compatible dependencies.
    # NOTE: Running 'pip check' after installation is necessary since pip
    # currently lacks dependency resolution which means it can silently create
    # broken installations.
    # For more details, see: https://github.com/pypa/pip/issues/988.
    pip check

commands =
    # General tests commands:
    # Run tests.
    py3{10,11}{,-storage-credentials}: coverage run tests/manage.py test {env:TEST_SUITE:resolwe} \
    py3{10,11}-storage-credentials:     --pattern storage_credentials_test_*.py \
    py3{10,11}{,-storage-credentials}:     --noinput --verbosity=2 --parallel
    py3{10,11}{,-storage-credentials}: coverage combine

    # Docs commands:
    # Build documentation.
    docs: python setup.py build_sphinx --fresh-env --warning-is-error

    # Linter commands:
    # Check code formating with black.
    linters: black --check resolwe
    # Check order of imports.
    linters: isort --check-only --diff resolwe
    # Run PyFlakes and Ned Batchelder's McCabe script.
    linters: flake8 resolwe
    # Check documentation formatting (PEP 257).
    linters: pydocstyle resolwe --match='(?!test[_s]).*\.py'

    # Packaging commands:
    # Confirm that items checked into git are in sdist.
    packaging: check-manifest
    # Verify package metadata and confirm the long_description will render
    # correctly on PyPI.
    packaging: python setup.py check --metadata --restructuredtext --strict

    # Migrations commands:
    migrations: python tests/manage.py migrate
    migrations: bash -c '[[ $(./tests/manage.py makemigrations --dry-run) = '\
    migrations:     '"No changes detected" ]] || exit 1'
