# ==============
# File Processes
# ==============
---

- slug: upload-file
  name: File
  requirements:
    expression-engine: jinja
    executor:
      docker:
        #image: resolwe/base:fedora-31
        image: resolwe/gregor:ubuntu-18.04
    resources:
      cores: 1
      memory: 1024
      network: true
  data_name: '{{ src.file }}'
  version: 1.0.0
  type: data:file
  category: Import
  persistence: RAW
  description: >
    Import any other file format such as a pdf.
  input:
    - name: src
      label: Input file
      type: basic:file
  output:
    - name: file
      label: File
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      mv {{ src.file_temp }} {{ src.file }}
      re-save-file file {{ src.file }}


- slug: upload-image-file
  name: Image file
  requirements:
    expression-engine: jinja
    executor:
      docker:
        # image: resolwe/base:fedora-31
        image: resolwe/gregor:ubuntu-18.04
    resources:
      cores: 1
      memory: 1024
      network: true
  data_name: '{{ src.file }}'
  version: 1.0.0
  type: data:file:image
  category: Import
  persistence: RAW
  description: >
    Import image files such as JPG or PNG.
  input:
    - name: src
      label: Image file
      type: basic:file
      description: >
        Image file.
      validate_regex: '\.(tiff|tif|jpg|jpeg|png|TIFF|TIF|JPG|JPEG|PNG)$'
  output:
    - name: file
      label: Image file
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      mv {{ src.file_temp }} {{ src.file }}
      re-save-file file {{ src.file }}


- slug: upload-tab-file
  name: Tabular file
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwe/upload-tab-file:2.0.0
    resources:
      cores: 1
      memory: 1024
      network: true
  data_name: '{{ src.file }}'
  version: 1.0.0
  type: data:file:tab
  category: Import
  persistence: RAW
  description: >
    Import tabular files such as CSV or XLSX.
  input:
    - name: src
      label: CSV file
      type: basic:file
      description: >
        Tabular file. Supported extensions: .txt, .tsv, .tab, .csv, .xls, .xlsx or *.gz
      validate_regex: '(\.(csv|tab|tsv|txt|xls|xlsx)(|\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z))|(\.bz2)$'
  output:
    - name: file
      label: Tabular file
      type: basic:file
    - name: src_file
      label: Source file
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
      if [[ '.'{{ src.file }} =~ \.(xls|xlsx)$ ]]; then
        mv {{ src.file_temp }} {{ src.file }}
        FILENAME=$(basename {{ src.file }})  # get file name
        NAME="${FILENAME%.*}"  # remove extension
        parse_tabular_file.py {{ src.file }} "${NAME}.tab.gz"
        re-checkrc
        re-save-file src_file {{ src.file }}
        re-save-file file "${NAME}.tab.gz"
      elif [[ '.'{{ src.file }} =~ (\.(csv)(|\.gz|\.bz2|\.tgz|\.tar\.gz|\.tar\.bz2|\.zip|\.rar|\.7z))|(\.bz2)$ ]]; then
        re-import {{ src.file_temp }} {{ src.file }} "csv" "csv" 0.1
        parse_tabular_file.py "${NAME}.csv" "${NAME}.tab.gz"
        re-checkrc
        re-save-file src_file "${NAME}.csv.gz"
        re-save-file file "${NAME}.tab.gz"
      else
        re-import {{ src.file_temp }} {{ src.file }} "tab|tsv|txt" "tab" 0.1
        parse_tabular_file.py "${NAME}.tab" "${NAME}_tabular.tab.gz"
        re-checkrc
        re-save-file src_file "${NAME}.tab.gz"
        re-save-file file "${NAME}_tabular.tab.gz"
      fi
