- slug: test-example-1
  name: Example process
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:example1
  input:
    - name: param1
      label: Param 1
      type: basic:string
    - name: param2
      label: Param 2
      type: basic:boolean
    - name: list_param
      label: Optional list
      type: list:data:test
      required: false
  output:
    - name: out1
      label: Out 1
      type: basic:string
  run:
    language: bash
    program: |
      re-save out1 "hello "{{ param1 }}

- slug: test-example-2
  name: Example process
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:example2
  input:
    - name: param1
      label: Param 1
      type: data:test:example1
    - name: param2
      label: Param 2 (group)
      group:
        - name: a
          label: A
          type: data:test:example1
        - name: b
          label: B
          type: basic:string
  output:
    - name: out1
      label: Out 1
      type: basic:string
  run:
    language: bash
    program: |
      re-save out1 "simon says: "{{ param1.out1 }}

- slug: test-workflow-1
  name: Workflow test
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:workflow
  input:
    - name: param1
      label: Param 1
      type: basic:string
    - name: list_param
      label: Optional list
      type: list:data:test
      required: false
  run:
    language: workflow
    program:
      - id: step1
        run: test-example-1
        input:
          param1: '{{ input.param1 }}'
          param2: true
          list_param: '{{ input.list_param }}'
      - id: step2
        run: test-example-2
        input:
          param1: '{{ steps.step1 }}'
          param2:
            a: '{{ steps.step1 }}'
            b: hello

- slug: test-workflow-simple
  name: Workflow test
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:workflow
  input:
    - name: param1
      label: Param 1
      type: basic:string
  run:
    language: workflow
    program:
      - id: step1
        run: test-example-1-simple
        input:
          param1: '{{ input.param1 }}'
      - id: step2
        run: test-example-2-simple
        input:
          param1: '{{ input.param1 }}'

- slug: test-example-1-simple
  name: Example 1 simple
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:example1
  input:
    - name: param1
      label: Param 1
      type: basic:string
  output:
    - name: out1
      label: Out 1
      type: basic:string
  run:
    language: bash
    program: |
      re-save out1 "hello1 "{{ param1 }}

- slug: test-example-2-simple
  name: Example 2 simple
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:example2
  input:
    - name: param1
      label: Param 1
      type: basic:string
  output:
    - name: out1
      label: Out 1
      type: basic:string
  run:
    language: bash
    program: |
      re-save out1 "hello2: "{{ param1 }}

- slug: test-example-3
  name: Example process
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:example3
  entity:
    type: sample
  run:
    language: bash
    program: |
      echo ""

- slug: test-example-4
  name: Example process
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:example4
  entity:
    type: sample
  input:
    - name: param1
      label: Param 1
      type: data:test:example3
  run:
    language: bash
    program: |
      echo ""

- slug: test-workflow-2
  name: Workflow test
  requirements:
    expression-engine: jinja
  version: 1.0.0
  type: data:test:workflow
  input:
    - name: data1
      label: Data 1
      type: data:test:example3
  run:
    language: workflow
    program:
      - id: step
        run: test-example-4
        input:
          param1: '{{ input.data1 }}'
