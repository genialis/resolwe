# Generated by Django 3.1.7 on 2021-08-24 10:04

from django.conf import settings
import django.contrib.postgres.constraints
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('flow', '0049_json_field'),
        ('billing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActualCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('cost', models.DecimalField(decimal_places=4, max_digits=12)),
                ('cost_type', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='BillingAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('customer_name', models.CharField(max_length=128)),
            ],
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='BillingCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ComputeCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=4, max_digits=12)),
                ('valid', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('cpu', models.PositiveSmallIntegerField()),
                ('memory', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DataHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alive', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('processing', django.contrib.postgres.fields.ranges.DateTimeRangeField(blank=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('referenced_collection_slug', models.CharField(max_length=100, null=True)),
                ('referenced_collection_name', models.CharField(max_length=100, null=True)),
                ('referenced_collection_id', models.PositiveIntegerField(null=True)),
                ('cpu', models.PositiveSmallIntegerField()),
                ('node_cpu', models.PositiveSmallIntegerField()),
                ('memory', models.PositiveSmallIntegerField()),
                ('node_memory', models.PositiveSmallIntegerField()),
                ('referenced_data_id', models.PositiveIntegerField()),
                ('size', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DefaultUserBillingAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EstimatedCostByBillingAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_type', models.CharField(max_length=32)),
                ('date', models.DateField()),
                ('cost', models.DecimalField(decimal_places=4, max_digits=12)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EstimatedCostByCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_type', models.CharField(max_length=32)),
                ('date', models.DateField()),
                ('cost', models.DecimalField(decimal_places=4, max_digits=12)),
                ('referenced_collection_name', models.CharField(max_length=100)),
                ('referenced_collection_slug', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=4, max_digits=12)),
                ('valid', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('storage_type', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='StorageTypeHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('storage_type', models.CharField(max_length=64)),
                ('data_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.datahistory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='storagecost',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=[('valid', '&&'), ('storage_type', '=')], name='exclude_overlapping_price_ranges'),
        ),
        migrations.AddField(
            model_name='estimatedcostbycollection',
            name='collection',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='flow.collection'),
        ),
        migrations.AddField(
            model_name='estimatedcostbybillingaccount',
            name='billing_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='billing.billingaccount'),
        ),
        migrations.AddField(
            model_name='defaultuserbillingaccount',
            name='billing_account',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='billing.billingaccount'),
        ),
        migrations.AddField(
            model_name='defaultuserbillingaccount',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='default_user_billing', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datahistory',
            name='billing_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='billing.billingaccount'),
        ),
        migrations.AddField(
            model_name='datahistory',
            name='collection',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='flow.collection'),
        ),
        migrations.AddField(
            model_name='datahistory',
            name='data',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_history', to='flow.data'),
        ),
        migrations.AddConstraint(
            model_name='computecost',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=[('valid', '&&'), ('cpu', '='), ('memory', '=')], name='exclude_overlapping_prices'),
        ),
        migrations.AddField(
            model_name='billingcollection',
            name='billing_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.billingaccount'),
        ),
        migrations.AddField(
            model_name='billingcollection',
            name='collection',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='billing_collection', to='flow.collection'),
        ),
        migrations.AddField(
            model_name='billingaccount',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='billing_account', to=settings.AUTH_USER_MODEL),
        ),
    ]
