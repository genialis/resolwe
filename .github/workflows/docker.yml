name: Build Docker Images

on:
  push:
    branches:
      - master
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  AWS_REGISTRY: public.ecr.aws/genialis
  AWS_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        image: [fedora-33, ubuntu-20.04, communication]
        include:
          - image: fedora-33
            context: resolwe/toolkit/docker_images/base/
            file: resolwe/toolkit/docker_images/base/Dockerfile.fedora-33
            repository: resolwe/base
            devel-tag: fedora-33dev
            stable-tag: fedora-33
            stable-suffix: "f"
          - image: ubuntu-20.04
            context: resolwe/toolkit/docker_images/base/
            file: resolwe/toolkit/docker_images/base/Dockerfile.ubuntu-20.04
            repository: resolwe/base
            devel-tag: latest
            stable-tag: ubuntu-20.04
            stable-suffix: ""
          - image: communication
            context: resolwe/
            file: resolwe/flow/docker_images/Dockerfile.communication
            repository: resolwe/com
            devel-tag: latest
            stable-tag: stable
            stable-suffix: ""

    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get the docker image tag
        if: ${{ always() && startsWith(github.ref, 'refs/tags') }}
        id: get_tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and push untagged image ${{ matrix.image }}
        if: ${{ always() && env.VERSION == '' && github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          tags: ${{ env.AWS_REGISTRY }}/${{ matrix.repository }}:${{ matrix.devel-tag }}
          push: true

      - name: Build and push tagged image ${{ matrix.image }} for pre-release
        if: ${{ always() && env.VERSION == '' }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          tags: ${{ env.AWS_REGISTRY }}/${{ matrix.repository }}:${{ env.VERSION }}${{ matrix.stable-suffix }}
          push: true

      - name: Build and push tagged image ${{ matrix.image }} for release
        if: ${{ always() && env.VERSION == '' && !contains(env.VERSION, 'a') }} # is tagged, but not with an alpha version
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          tags: ${{ env.AWS_REGISTRY }}/${{ matrix.repository }}:${{ matrix.stable-tag }}
          push: true
